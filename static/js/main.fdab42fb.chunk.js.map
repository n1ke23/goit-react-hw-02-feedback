{"version":3,"sources":["Component/Buttons/Buttons.js","Component/Statistick/Statistick.js","Component/Section/Section.js","Component/Notification/Notification.js","Component/App.js","index.js"],"names":["Buttons","id","addStep","className","onClick","Statistick","name","value","Section","title","children","Notification","message","state","good","neutral","bad","App","useState","states","setStates","el","countTotalFeedback","Object","values","reduce","acc","keys","map","titel","entries","toFixed","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qPASeA,EANC,SAAC,GAAqB,IAAnBC,EAAkB,EAAlBA,GAAIC,EAAc,EAAdA,QACrB,OACE,wBAAQC,UAAU,SAASF,GAAIA,EAAIG,QAAS,kBAAMF,EAAQD,IAA1D,SAAgEA,KCMrDI,EARI,SAAC,GAAmB,IAAlBC,EAAiB,EAAjBA,KAAMC,EAAW,EAAXA,MACzB,OACE,mCACE,8BAAID,EAAJ,KAAYC,QCKHC,EATC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACxB,OACA,gCACE,6BAAKD,IACJC,MCIUC,EARM,SAAC,GAAe,IAAdC,EAAa,EAAbA,QACrB,OAEI,6BAAKA,KCELC,EAAQ,CACZC,KAAM,EACNC,QAAS,EACTC,IAAK,GAsBQC,MAnBf,WAAgB,IAAD,EACeC,mBAASL,GADxB,mBACNM,EADM,KACEC,EADF,KAEPlB,EAAU,SAACD,GACf,OAAOmB,GAAU,SAACC,GAAD,mBAAC,eAAaA,GAAd,kBAAmBpB,EAAKoB,EAAGpB,GAAM,QAE9CqB,EAAqB,kBAAMC,OAAOC,OAAOL,GAAQM,QAAO,SAACC,EAAKL,GAAN,OAAaK,EAAML,IAAI,IAErF,OACE,qCACG,cAAC,EAAD,CAASZ,MAAO,wBAAhB,SACIc,OAAOI,KAAKR,GAAQS,KAAI,SAACP,GAAD,OAAQ,cAAC,EAAD,CAAkBpB,GAAIoB,EAAInB,QAASA,GAArBmB,QAEjDC,IAAuB,EACpB,eAAC,EAAD,CAASO,MAAO,aAAhB,UAA+BN,OAAOO,QAAQX,GAAQS,KAAI,SAACP,GAAD,OAAO,cAAC,EAAD,CAAwBf,KAAMe,EAAG,GAAId,MAAOc,EAAG,IAA9BA,EAAG,OAAmC,wCAAWC,OAAyB,qDAPrHH,EAAOL,KAAOQ,IAAwB,KAAKS,UAO0E,UAC5J,cAAC,EAAD,CAAcnB,QAAQ,0BCtBjCoB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.fdab42fb.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Buttons = ({ id, addStep }) => {\r\n  return (\r\n    <button className='button' id={id} onClick={() => addStep(id)}>{id}</button>\r\n  );\r\n};\r\n\r\nexport default Buttons;\r\n\r\nButtons.propTypes = {\r\n  id: PropTypes.string.isRequired,\r\n  addStep: PropTypes.func.isRequired,\r\n}","import React from 'react';\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Statistick = ({name, value}) => {\r\n  return (\r\n    <>\r\n      <p>{name}: {value}</p>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Statistick;\r\nStatistick.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  value: PropTypes.number.isRequired,\r\n}","import React from 'react';\r\nimport PropTypes from \"prop-types\";\r\nconst Section = ({ title, children }) => {\r\n  return (\r\n  <div>\r\n    <h2>{title}</h2>\r\n    {children}\r\n  </div>\r\n  );\r\n};\r\n\r\nexport default Section;\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  children: PropTypes.array.isRequired\r\n}","import React from 'react';\r\nimport PropTypes from \"prop-types\";\r\nconst Notification = ({message}) => {\r\n  return (\r\n    \r\n      <h2>{message}</h2>\r\n    \r\n  );\r\n};\r\n\r\nexport default Notification;\r\n\r\nNotification.propTypes = {\r\nmessage: PropTypes.string,\r\n}","import React, { useState } from 'react';\r\nimport Buttons from './Buttons/Buttons'\r\nimport Statistick from './Statistick/Statistick'\r\nimport Section from './Section/Section'\r\nimport Notification from './Notification/Notification'\r\n\r\n\r\nconst state = {\r\n  good: 0,\r\n  neutral: 0,\r\n  bad: 0\r\n};\r\n\r\nfunction App() {\r\n  const [states, setStates] = useState(state);\r\n  const addStep = (id) => {\r\n    return setStates((el) => ({ ...el, [id]: el[id] + 1 }))\r\n  }\r\n  const countTotalFeedback = () => Object.values(states).reduce((acc, el) => acc + el, 0)\r\n  const countPositiveFeedbackPercentage = () => ((states.good / countTotalFeedback()) * 100).toFixed()\r\n  return (\r\n    <>\r\n       <Section title={\"Please leave feedback\"}>\r\n          {Object.keys(states).map((el) => <Buttons key={el} id={el} addStep={addStep} />)}\r\n      </Section>\r\n      { countTotalFeedback() > 0 \r\n        ? (<Section titel={\"Statistick\"}>{Object.entries(states).map((el)=> <Statistick key={el[0]} name={el[0]} value={el[1]}/> )}<p>total: {countTotalFeedback()}</p><p>Positive feedback: {countPositiveFeedbackPercentage()}%</p></Section>) \r\n        : (<Notification message=\"No feedback given\" />)\r\n      }\r\n    </>\r\n  );\r\n}\r\nexport default App;\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './Component/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}